create schema user_schema;

set search_path to user_schema;

create table member
(
    id         uuid primary key   default gen_random_uuid(),
    seq_id     bigint    not null unique generated by default as identity (minvalue 1),
    username   text      not null unique,
    email      text unique,
    first_name text,
    last_name  text      not null,
    birth_date date,
    phone      text      not null,
    address    text,
    is_enable  boolean   not null default false,
    is_locked  boolean   not null default false,
    created_at timestamp not null default now()
);

create table member_auths
(
    id          bigint primary key generated by default as identity (minvalue 1),
    member_id   uuid not null references member (id),
    provider    text not null,
    provider_id text unique,
    password    text,
    check (
        (provider = 'local' and password is not null) or
        (provider != 'local' and password is null)
        )
);

create table member_roles
(
    id        bigint primary key generated by default as identity (minvalue 1),
    member_id uuid not null references member (id),
    authority text not null default 'GUEST' -- GUEST, NORMAL, EMPLOYEE, MANAGER, SUPERUSER
);

create table login_logs
(
    id         bigint primary key generated always as identity (minvalue 1),
    member_id  uuid      not null references member (id),
    provider   text      not null,
    attempt_at timestamp not null default now(),
    ip_address text,
    is_success bool      not null
);

create table member_verification
(
    id         bigint primary key generated by default as identity (minvalue 1),
    member_id  uuid      not null references member (id),
    token      uuid      not null,
    otp        text      not null,
    is_used    boolean   not null default false,
    expired_at timestamp not null,
    created_at timestamp not null default now()
)