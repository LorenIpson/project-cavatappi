server.port=8081
spring.application.name=user-service

################## datasource ##################
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=${DB_USER_DB_URL}
spring.datasource.username=${DB_USER_DB_USERNAME}
spring.datasource.password=${DB_USER_DB_PASSWORD}

################## jpa ##################
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

################## security ##################
spring.security.oauth2.client.registration.github.client-id=${OAUTH_USER_GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${OAUTH_USER_GITHUB_CLIENT_SECRET}

spring.security.oauth2.client.registration.google.client-id=${OAUTH_USER_GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${OAUTH_USER_GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.client-name=Google

# 1.    The login endpoint (e.g. /oauth2/authorization/my-oidc-client(github)) is used to initiate login and perform a
#       redirect to the third party authorization server.
# 2.    The redirection endpoint (e.g. /login/oauth2/code/my-oidc-client(github)) is used by the authorization server to
#       redirect back to the client application, and will contain a code parameter used to
#       obtain an id_token and/or access_token via the access token request.

################## jwt ##################
jwt.secret-key=${JWT_SECRET_KEY}
jwt.secret-key.valid.seconds=${JWT_KEY_VALID_SECONDS}

################## validation mail ##################
spring.mail.host=${SMTP_HOST}
spring.mail.port=${SMTP_PORT}
spring.mail.username=${SMTP_USERNAME}
spring.mail.password=${SMTP_PASSWORD}
spring.mail.properties.transport.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

################## debug ##################
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.mail=DEBUG